library(reticulate)
use_python("C:/Users/amaxwel6/Anaconda3/envs/pytorchSB/python.exe", required=TRUE)
py_config()
reticulate::repl_python()
from msai.dataloaders import StreamingDataset
from msai import dataloaders
quit
images <- list.files("C:/Maxwell_Data/topo_data/topoDL/topos")
masks <- list.files("C:/Maxwell_Data/topo_data/topoDL/masks")
input_topos <- data.frame(Images = images, Masks = masks)
View(input_topos)
write.csv(input_topos, "C:/Maxwell_Data/topo_data/topoDL/topo_list.csv")
reticulate::repl_python()
import numpy as no
import pandas as pd
topoLst = pandas.read_csv("C:/Maxwell_Data/topo_data/topoDL/topo_list.csv)
topoLst = pandas.read_csv("C:/Maxwell_Data/topo_data/topoDL/topo_list.csv")
topoLst = pd.read_csv("C:/Maxwell_Data/topo_data/topoDL/topo_list.csv")
topo_data = StreamingGeospatialDataset(imagery_fns=topoLst[1], label_fns=topoLst[2], groups=None, chip_size=256, num_chips_per_tile=200)
import sys
import numpy as np
import rasterio
from rasterio.windows import Window
from rasterio.errors import RasterioError, RasterioIOError
import torch
from torchvision import transforms
from torch.utils.data.dataset import IterableDataset
topo_data = StreamingGeospatialDataset(imagery_fns=topoLst[1], label_fns=topoLst[2], groups=None, chip_size=256, num_chips_per_tile=200)
from msai import dataloaders as geoDL
topo_data = geoDL.StreamingGeospatialDataset(imagery_fns=topoLst[1], label_fns=topoLst[2], groups=None, chip_size=256, num_chips_per_tile=200)
topo_data = geoDL.StreamingDatasets(imagery_fns=topoLst[1], label_fns=topoLst[2], groups=None, chip_size=256, num_chips_per_tile=200)
topo_data = geoDL.StreamingDatasets.StreamingGeospatialDataset(imagery_fns=topoLst[1], label_fns=topoLst[2], groups=None, chip_size=256, num_chips_per_tile=200)
from msai.dataloaders.StreamingDatasets import StreamingGeospatialDataset
